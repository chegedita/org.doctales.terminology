// Colors

@labelFontSize: 0.7em;             
@hintsColor: #105B63;
@placeholderColor: #BD4932;
@focusedPlaceholderColor: #105B63;
@borderColor: #3d3d3d;

// Blocks

@font-face {
  font-family: 'fontello';
  src: url('../icons/fontello/font/fontello.ttf?24192630') format('truetype');
  font-weight: normal;
  font-style: normal;
}

/**, *:before, *:after {
    background-color: red;
    display: none;
    content: "" !important;
}*/

/*    oxy_button(
        action, oxy_action(
            name, '\e800',
            description, 'Move up',
            operation, 'ro.sync.ecss.extensions.commons.operations.MoveElementOperation',
            arg-targetLocation, 'preceding-sibling::*[1]',
            arg-insertPosition, 'Before'
        ),
        transparent, true,
        actionContext, element,
        showIcon, false,
        fontInherit, true
    )
*/

*[class~="topic/related-links"]:before {
    display: none;
}
/*.icon-up-big:before { content: '\e800'; } /\* '' *\/
.icon-down-big:before { content: '\e801'; } /\* '' *\/
.icon-trash-empty:before { content: '\e802'; } /\* '' *\/
.icon-trash:before { content: '\e803'; } /\* '' *\/
.icon-file-code:before { content: '\e804'; } /\* '' *\/
.icon-file-image:before { content: '\e805'; } /\* '' *\/
.icon-file-pdf:before { content: '\e806'; } /\* '' *\/
.icon-git:before { content: '\e807'; } /\* '' *\/
.icon-github-squared:before { content: '\e808'; } /\* '' *\/
*/
.beforeBlock {
    color: #767676;
    font-size: 0.7em;
    font-family: "Helvetica Neue",Helvetica,"Segoe UI",Arial,freesans,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
    display: block;
    border-bottom: 1pt solid #767676;
    width: inherit;
    font-style: normal;
    padding-left: 0.3em;
}

.mainBlock {
    border: 1pt solid @borderColor;
    display: block;
    margin-top: 0.5em;
    margin-bottom: 0.5em;
    margin-right: 0.5em;
}

.afterBlock {
    font-size: 0.7em;
    display: block;
    color: #005544;
    border: 1pt solid @borderColor;
    padding: 0.1em;
}

.uiElement {
    display: block;
    margin-top: -1.5em;
    margin-left: 100px;
}

.uiElementLabel {
    display: block;
    width: 100px;
    font-weight: normal;
    color: black !important;
}

// Elements

*[class~="termentry/definition"] {}
*[class~="termentry/definitionSource"] {}
*[class~="termentry/domain"] {}
*[class~="termentry/documentReference"] {}
*[class~="termentry/documentName"] {}
*[class~="termentry/agreedWith"] {}
*[class~="termentry/termCommitteeMember"] {}

*[class~="termentry/termVariant"] {
    background-color: yellow !important;
}

// Elements
*[class~="termentry/termBody"]:before(10) {
    .beforeBlock();
    content: oxy_buttonGroup(
    label, 'Add Term', 
    actions, 
      oxy_action_list(
          oxy_action(
                name, 'Full Form', 
                description, 'Insert a full form element', 
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
                arg-fragment, '<fullForm usage="allowed" language="en"><termVariant>...</termVariant></fullForm>',
                arg-insertLocation, '.',
                arg-insertPosition, 'Inside'
          ),
          oxy_action(
                name, 'Acronym', 
                description, 'Insert an acronym element', 
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
                arg-fragment, '<acronym usage="allowed" language="en"><termVariant>...</termVariant></acronym>',
                arg-insertLocation, '.',
                arg-insertPosition, 'Inside'
          ),
          oxy_action(
                name, 'Abbreviation', 
                description, 'Insert an abbreviation element', 
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
                arg-fragment, '<abbreviation usage="allowed" language="en"><termVariant>...</termVariant></abbreviation>',
                arg-insertLocation, '.',
                arg-insertPosition, 'Inside'
          )
      )
  );
}

*[class~="termentry/definition"]:before(10) {
    .beforeBlock();
    content: "Definition";
}

*[class~="termentry/definition"] {
    .mainBlock();
}

*[class~="termentry/definitionSource"]:before(10) {
    .beforeBlock();
    content: "Source of Definition";
}

*[class~="termentry/definitionSource"] {
    .mainBlock();
}

*[class~="termentry/termNotation"]:before(10) {
    .beforeBlock();
}

*[class~="termentry/fullForm"]:before(10) {
    content: "Full Form"
}

*[class~="termentry/abbreviation"]:before(10) {
    content: "Abbreviation";
}

*[class~="termentry/acronym"]:before(10) {
    content: "Acronym";
}

*[class~="termentry/termNotation"]:before(8) {
    content: "Usage: ";
    .uiElementLabel();
}

*[class~="termentry/termNotation"]:before(7) {
    content:
    oxy_combobox( 
        edit, '@usage',
        editable, false,
        columns, 15,
        values, 'allowed, deprecated',
        labels, 'allowed, deprecated'
    );
    .uiElement();
}

*[class~="termentry/termNotation"]:before(6) {
    content: 
    oxy_button(actionID, 'doctales.move.element.up', showIcon, true)
    oxy_button(actionID, 'doctales.move.element.down', showIcon, true)
    oxy_buttonGroup(
        label, '', 
        icon, url('../icons/add-icon.png'),
        tooltip, 'These actions do this and that..',    
        actions, oxy_action_list(
            oxy_action(
                name, 'Full Form', 
                description, 'Insert a full form element', 
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
                arg-fragment, '<fullForm usage="allowed" language="en"><termVariant>...</termVariant></fullForm>',
                arg-insertLocation, '.',
                arg-insertPosition, 'Inside'
            ),
            oxy_action(
                name, 'Acronym', 
                description, 'Insert an acronym element', 
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
                arg-fragment, '<acronym usage="allowed" language="en"><termVariant>...</termVariant></acronym>',
                arg-insertLocation, '.',
                arg-insertPosition, 'Inside'
            ),
            oxy_action(
                name, 'Abbreviation', 
                description, 'Insert an abbreviation element', 
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
                arg-fragment, '<abbreviation usage="allowed" language="en"><termVariant>...</termVariant></abbreviation>',
                arg-insertLocation, '.',
                arg-insertPosition, 'Inside'
            )
        )
    )
    oxy_button(actionID, 'doctales.delete.element', showIcon, true);
    display: block;
    margin-top: -1.5em;
    text-align:right;
    margin-left: 300px;
}

*[class~="termentry/termNotation"]:before(5) {
    content: "Language: ";
    .uiElementLabel();
}

*[class~="termentry/termNotation"]:before(4) {
    content:
    oxy_combobox( 
        edit, '@language',
        editable, false,
        columns, 15,
        values, 'af, ar-ae, ar-bh, ar-dz, ar-eg, ar-iq, ar-jo, ar-kw, ar-lb, ar-ly, ar-ma, ar-om, ar-qa, ar-sa, ar-sy, ar-tn, ar-ye, be, bg, ca, cs, da, de, de-at, de-ch, de-li, de-lu, el, en, en-au, en-bz, en-ca, en-gb, en-ie, en-jm, en-nz, en-tt, en-us, en-za, es, es-ar, es-bo, es-cl, es-co, es-cr, es-do, es-ec, es-gt, es-hn, es-mx, es-ni, es-pa, es-pe, es-pr, es-py, es-sv, es-uy, es-ve, et, eu, fa, fi, fo, fr, fr-be, fr-ca, fr-ch, fr-lu, ga, gd, he, hi, hr, hu, id, is, it, it-ch, ja, ji, ko, lt, lv, mk, ms, mt, nl, nl-be, no, pl, pt, pt-br, rm, ro, ro-mo, ru, ru-mo, sb, sk, sl, sq, sr, sv, sv-fi, sx, sz, th, tn, tr, ts, uk, ur, ve, vi, xh, zh-cn, zh-hk, zh-sg, zh-tw, zu',
        labels, 'af, ar-ae, ar-bh, ar-dz, ar-eg, ar-iq, ar-jo, ar-kw, ar-lb, ar-ly, ar-ma, ar-om, ar-qa, ar-sa, ar-sy, ar-tn, ar-ye, be, bg, ca, cs, da, de, de-at, de-ch, de-li, de-lu, el, en, en-au, en-bz, en-ca, en-gb, en-ie, en-jm, en-nz, en-tt, en-us, en-za, es, es-ar, es-bo, es-cl, es-co, es-cr, es-do, es-ec, es-gt, es-hn, es-mx, es-ni, es-pa, es-pe, es-pr, es-py, es-sv, es-uy, es-ve, et, eu, fa, fi, fo, fr, fr-be, fr-ca, fr-ch, fr-lu, ga, gd, he, hi, hr, hu, id, is, it, it-ch, ja, ji, ko, lt, lv, mk, ms, mt, nl, nl-be, no, pl, pt, pt-br, rm, ro, ro-mo, ru, ru-mo, sb, sk, sl, sq, sr, sv, sv-fi, sx, sz, th, tn, tr, ts, uk, ur, ve, vi, xh, zh-cn, zh-hk, zh-sg, zh-tw, zu'
    );
    .uiElement();
}

*[class~="termentry/termNotation"] {
    .mainBlock();
}

*[class~="termentry/termNotation"]:text {
    background-color: purple;
}


*[class~="termEntry/termVariant"]:before(10) {
    content: "Term";
    .beforeBlock();
}

*[class~="termEntry/termVariant"]:before(9) {
    content: "Term: ";
    .uiElementLabel();
}

*[class~="termEntry/termVariant"]:before(8) {
    content: 
    oxy_textfield(
        edit, '#text',
        columns, 40
    );
    .uiElement();
}

*[class~="termEntry/termVariant"]:before(7) {
    content:
    oxy_button(actionID, 'doctales.move.element.up', showIcon, true)
    oxy_button(actionID, 'doctales.move.element.down', showIcon, true)
    oxy_buttonGroup(
        label, '', 
        icon, url('../icons/add-icon.png'),
        tooltip, 'These actions do this and that..',    
        actions, oxy_action_list(
            oxy_action(
                name, 'Term Variant', 
                description, 'Insert a term variant element', 
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
                arg-fragment, '<termVariant></termVariant>',
                arg-insertLocation, '.',
                arg-insertPosition, 'After'
            ),
            oxy_action(
                name, 'Context', 
                description, 'Insert a context element', 
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
                arg-fragment, '<contextOfTerm><contextContent></contextContent></contextOfTerm>',
                arg-insertLocation, '.',
                arg-insertPosition, 'After'
            ),
            oxy_action(
                name, 'Source of Term', 
                description, 'Insert a source of term element', 
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
                arg-fragment, '<sourceOfTerm></sourceOfTerm>',
                arg-insertLocation, '.',
                arg-insertPosition, 'After'
            ),
            oxy_action(
                name, 'Annotation', 
                description, 'Insert an annotation element', 
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
                arg-fragment, '<annotation></annotation>',
                arg-insertLocation, '.',
                arg-insertPosition, 'After'
            )
        )
    )
    oxy_button(actionID, 'doctales.delete.element', showIcon, true);
    display: block;
    color: black !important;
    margin-top: -1.5em;
    text-align:right;
    margin-left: 300px;
}

*[class~="termEntry/termVariant"]:before(1) {
    content: "";
}

*[class~="termEntry/termVariant"]{
    border: 1pt solid @borderColor;
    display: block;
    color: transparent;
    margin-top: 0.5em;
    margin-bottom: 0.5em;
    margin-right: 0.5em;
}

*[class~="topic/data"]:before {
    display:block;
    content: "Data name: "oxy_textfield(edit, '@name', columns, 15) " Value: "oxy_textfield(edit, '@value', columns, 15) " ";
}

*[class~="termEntry/termVariant"]:after(1) {
    content: "Case: ";
    display: block;
    width: 3.0em;
    font-weight: normal;
    margin-top: -1.5em;
    margin-left: 15em;
    color: black !important;
    font-size: 1em !important;
}

*[class~="termEntry/termVariant"]:after(2) {
    content:
    oxy_combobox( 
        edit, '@case',
        editable, false,
        columns, 10,
        values, 'nominative, dative, accusative, genitive',
        labels, 'nominative, dative, accusative, genitive'
    );
    display: block;
    margin-top: -1.5em;
    margin-left: 18em;
}
*[class~="termEntry/termVariant"]:after(3) {
    content: "Number: ";
    display: block;
    width: 4em;
    font-weight: normal;
    color: black !important;
    font-size: 1em !important;
    margin-top: -1.49em;
    margin-left: 25em;
}
*[class~="termEntry/termVariant"]:after(4) {
    content: 
    oxy_combobox( 
        edit, '@number',
        editable, false,
        columns, 10,
        values, 'singular, plural',
        labels, 'singular, plural'
    );
    display: block;
    margin-top: -1.48em;
    margin-left: 30em;
}

*[class~="termEntry/termVariant"]:after(5) {
    content: "";
    display: block;
    height: 2px;
    margin-top: 1px;
}

/* Related Terms */
*[class~="termEntry/relatedTerms"]:before(10) {
    content: "Related Terms";
    .beforeBlock();
}

*[class~="termEntry/relatedTerms"]:before(9) {
    content:
    oxy_button(
        action, oxy_action(
            name, 'Add Related Term', 
            description, 'Insert an element after the current one', 
            operation, 'ro.sync.ecss.extensions.dita.keyref.InsertKeyrefOperation'
        ), 
        showIcon, false
    );
}

*[class~="termEntry/relatedTerms"] {
    .mainBlock();
}

*[class~="termEntry/relatedTerm"]:before(10) {
    content: "Related Term";
}

*[class~="termEntry/relatedTerm"] {
    .mainBlock();
}

*[class~="termEntry/antonym"]:before(10) {
    content: "Antonym";
    .beforeBlock();
}

*[class~="termEntry/antonym"] {
    .mainBlock();
}

*[class~="termEntry/hypernym"]:before(10) {
    content: "Hypernym";
}

*[class~="termEntry/hypernym"] {
    .mainBlock();
}

*[class~="termEntry/hyponym"]:before(10) {
    content: "Hyponym";
}

*[class~="termEntry/hyponym"] {
    .mainBlock();
}

*[class~="termEntry/isPartOf"]:before(10) {
    content: "Is Part Of";
}

*[class~="termEntry/isPartOf"] {
    .mainBlock();
}

*[class~="topic/abstract"]:before {
    content: "";
}


/* Footer */
*[class~="termentry/termentry"]:after(9) {
    content: 'Developed by Doctales ';
    link : 'https://doctales.github.io';
    color: #767676;
    font-size: 0.7em;
    font-family: "Helvetica Neue",Helvetica,"Segoe UI",Arial,freesans,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
}

*[class~="termentry/termentry"]:after(10) {
    content: '\e809';
    link : 'https://doctales.github.io';
    font-family: "fontello" !important;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    font-size: 0.8em !important;
    padding-left: 0.1em;
    padding-right: 0.1em;
}

*[class~="termentry/termentry"]:after(11) {
    content: '\e807';
    link : 'https://github.com/doctales';
    font-family: "fontello" !important;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    font-size: 0.8em !important;
    padding-left: 0.1em;
    padding-right: 0.1em;
}