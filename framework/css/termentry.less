@import url("elements.less");
@import url("flags.less");

/*********************************************
 * TERMENTRY
 *********************************************/
*[class~="termentry/termentry"] {
    display: block; 
    empty-cells: true; 
    font-family: @font; 
    font-size: @fontSize; 
    font-style: normal; 
    font-weight: 400; 
    line-height: 1.2; 
    margin-bottom: 24px; 
    margin-left: auto; 
    margin-right: auto; 
    margin-top: 24px; 
    min-height: 378px; 
    outline-width: 0; 
    padding-bottom: 80px; 
    /*padding-left: 32px; 
    padding-right: 16px;*/ 
    padding-top: 32px; 
    text-decoration-color: rgba(0,0,0,1.0); 
    text-decoration-line: none; 
    text-decoration-style: solid; 
    width: @containerWidth;
    -oxy-display-tags: none;
}

*[class~="termentry/termentry"] > *[class~="topic/title"] {
    font-family: @font;
    font-weight: bold;
    font-size: 2em;
    -oxy-display-tags: none;
    width: 700px;
}

*[class~="termentry/termentry"] > *[class~="topic/title"]:after {
    .header();
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.conceptLevel)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.definition'),
            oxy_action(id, 'doctales.add.partOfSpeech'),
            oxy_action(id, 'doctales.add.agreedWith'),
            oxy_action(id, 'doctales.add.equation-figure'),
            oxy_action(id, 'doctales.add.note'),
            oxy_action(id, 'doctales.add.fig'),
            oxy_action(id, 'doctales.add.annotation'),
            oxy_action(id, 'doctales.add.domains')
        )
    );
}

/*********************************************
 * TERM BODY
 *********************************************/
*[class~="termentry/termBody"]:before {
    .header();
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.termLevel)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb')
        )
    );
}
*[class~="termentry/termBody"] {
    margin-top: 2em;
}
*[class~="termentry/termBody"]:after {
    margin-top: 2em !important;
    .header();
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.relations)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.antonyms'),
            oxy_action(id, 'doctales.add.partsOf'),
            oxy_action(id, 'doctales.add.instancesOf'),
            oxy_action(id, 'doctales.add.hypernyms'),
            oxy_action(id, 'doctales.add.hyponyms'),
            oxy_action(id, 'doctales.add.relatedTerms'),
            oxy_action(id, 'doctales.delete.relations')
        )
    );
}

/*********************************************
 * DEFINITION
 *********************************************/
*[class~="termentry/definition"]:before(10) {
    .header();
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.definition)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.definitionSource'),
            oxy_action(id, 'doctales.delete.definition')
        )
    );
}
*[class~="termentry/definition"]:hover:before(9) {
    .deleteElementButton();
}
*[class~="termentry/definition"] {
    .blockElement();
}

/*********************************************
 * DEFINITION TEXT
 *********************************************/
*[class~="termentry/definitionText"] {
    -oxy-placeholder-content: "${i18n(doctales.definitionText.placeholder)}";
    border: none !important;
    .blockElement();
}

/*********************************************
 * DEFINITION SOURCE
 *********************************************/
*[class~="termentry/definitionSource"]:before(10) {
    .header();
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.definitionSource)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.sourceName.add'),
            oxy_action(id, 'doctales.sourceReference.add'),
            oxy_action(id, 'doctales.delete.definitionSource')
        )
    );
}
*[class~="termentry/definitionSource"]:hover:before(9) {
    .deleteElementButton();
}
*[class~="termentry/definitionSource"] {
    .blockElement();
}

/*********************************************
 * FIG
 *********************************************/
*[class~="topic/fig"]:before(10) {
    .header();
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.fig)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.delete.fig')
        )
    );
}
*[class~="topic/fig"]:hover:before(9) {
    .deleteElementButton();
}
*[class~="topic/fig"]:before(8) {
    .separator();
}
*[class~="topic/fig"] {
    visibility: -oxy-collapse-text;
    .blockElement();
}
*[class~="topic/fig"] > *[class~="topic/title"]:before(10) {
    content: "${i18n(doctales.fig.title)}";
    .col1();
    padding-left: 0.5em;
}
*[class~="topic/fig"] > *[class~="topic/title"]:before(9) {
    content:
    oxy_textfield(
        edit, '#text',
        columns, 60
    );
}
*[class~="topic/fig"] > *[class~="topic/title"] {
    .blockElementNoBorder();
    /*visibility: -oxy-collapse-text;*/
    -oxy-show-placeholder: no !important;
}

/*********************************************
 * IMAGE
 *********************************************/
*[class~="topic/image"] {
    content: attr(href , url);
    visibility: -oxy-collapse-text;
    .blockElement();
}
*[class~="topic/image"]:before(10) {
    .header();
    content: 
    oxy_buttonGroup(
        label, '${i18n(doctales.image)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.imageReference'),
            oxy_action(id, 'doctales.delete.image')
        )
    );
}
*[class~="topic/image"]:hover:before(9) {
    .deleteElementButton();
}
*[class~="topic/image"]:before(8) {
    .separator();
}
*[class~="topic/image"]:before(7) {
    content: "href";
    width: 5em;
    .link();
    .col1();
}
*[class~="topic/image"]:before(6) {
    content:
    oxy_textfield(
          edit, '@href',
          columns, 60
    ) "\A";
}
*[class~="topic/image"]:before(5) {
    content: "width";
    width: 5em;
    .col1();
}
*[class~="topic/image"]:before(4) {
    content:
    oxy_textfield(
          edit, '@width',
          columns, 10
    ) "\A";
}
*[class~="topic/image"] > *[class~="topic/alt"]:before(10) {
    .col1();
    content: "\A ${i18n(doctales.alt)}";
    padding-left: 0.5em;
}
*[class~="topic/image"] > *[class~="topic/alt"]:before(9) {
    content:
    oxy_textfield(
        edit, '#text',
        columns, 60
    );
}
*[class~="topic/image"] > *[class~="topic/alt"]:before,
*[class~="topic/image"] > *[class~="topic/alt"]:after {
    content: '';
}

/*********************************************
 * TERM SOURCE
 *********************************************/
*[class~="termentry/termSource"]:before(10) {
    .header();
    content: "\A"
    oxy_buttonGroup(
        label, '${i18n(doctales.termSource)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.sourceName.add'),
            oxy_action(id, 'doctales.sourceReference.add'),
            oxy_action(id, 'doctales.sourceName.delete'),
            oxy_action(id, 'doctales.sourceReference.delete'),
            oxy_action(id, 'doctales.delete.termSource')
        )
    );
}
*[class~="termentry/termSource"] {
    visibility: -oxy-collapse-text;
    .blockElement();
}

/*********************************************
 * SOURCE NAME
 *********************************************/
*[class~="termentry/sourceName"]:before(10) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.sourceName)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.sourceName.delete')
        )
    );
    .col1();
}
*[class~="termentry/sourceName"]:hover:before(9) {
    .deleteElementButton();
}
*[class~="termentry/sourceName"] {
    -oxy-placeholder-content: "${i18n(doctales.sourceName.placeholder)}";
    .blockElementNoBorder();
}

/*********************************************
 * SOURCE REFERENCE
 *********************************************/
*[class~="termentry/sourceReference"]:before(15) {
    content: 
    oxy_buttonGroup(
        label, '${i18n(doctales.sourceReference)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.sourceReference.delete')
        )
    );
    .col1();
}
*[class~="termentry/sourceReference"]:before {
    display: none !important;
}
*[class~="termentry/sourceReference"][href][format='html']:empty {
    .hideContent();
}
*[class~="termentry/sourceReference"] {
    -oxy-placeholder-content: "${i18n(doctales.sourceReference.placeholder)}";
    .blockElementNoBorder();
}
*[class~="termentry/sourceReference"]:edit-mode {
    border: @border;
}
*[class~="termentry/sourceReference"]:after(1) {
    display: inline-block;
    margin-left: 15pt;
    margin-right: 5pt;
    link: attr(href);
    background-image: url('../icons/link_12.png');
    background-repeat: no-repeat;
    content: "    ";
}
*[class~="termentry/sourceReference"]:after(2) {
    .enableEditModeButton();
}
*[class~="termentry/sourceReference"]:edit-mode:after(2) {
    .disableEditModeButton();
}
*[class~="termentry/sourceReference"]:edit-mode:after(3) {
    .separator();
}
*[class~="termentry/sourceReference"]:edit-mode:after(4) {
    content: "${i18n(doctales.sourceReference.href)}";
    .col1();
    .link();
}
*[class~="termentry/sourceReference"]:edit-mode:after(5) {
    content:
    oxy_textfield(
        edit, '@href',
        columns, 60
    );
}
*[class~="termentry/sourceReference"]:edit-mode:after(6) {
    .separator();
}
*[class~="termentry/sourceReference"]:edit-mode:after(7) {
    content: "${i18n(doctales.sourceReference.format)}";
    .col1();
    .link();
}
*[class~="termentry/sourceReference"]:edit-mode:after(8) {
    content:
    oxy_combobox( 
        edit, '@format',
        columns, 13
    );
}
*[class~="termentry/sourceReference"]:edit-mode:after(9) {
    .separator();
}
*[class~="termentry/sourceReference"]:edit-mode:after(10) {
    content: "${i18n(doctales.sourceReference.scope)}";
    .col1();
    .link();
}
*[class~="termentry/sourceReference"]:edit-mode:after(11) {
    content:
    oxy_combobox( 
        edit, '@scope',
        columns, 13
    ) !important;
}

/*********************************************
 * ANNOTATION
 *********************************************/
*[class~="termentry/annotation"]:before(10) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.annotation)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.delete.annotation')
        )
    );
    .header();
}
*[class~="termentry/annotation"]:hover:before(9) {
    .deleteElementButton();
}
*[class~="termentry/annotation"]:before(8) {
    .separator();
}
*[class~="termentry/annotation"] {
    -oxy-placeholder-content: "<annotation>";
    .blockElement();
}

/*********************************************
 * TERM CONTEXT
 *********************************************/
*[class~="termentry/termContext"]:before(10) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.termContext)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.delete.termContext')
        )
    );
    .header();
}
*[class~="termentry/termContext"] {
    -oxy-placeholder-content: "<termContext>";
    .blockElement();
}

/*********************************************
 * TERM CONTEXT SOURCE
 *********************************************/
*[class~="termentry/termContextSource"]:before(10) {
    .header();
    content: "\A ${i18n(doctales.termContextSource)}";
}
*[class~="termentry/termContextSource"] {
    visibility: -oxy-collapse-text;
    .blockElement();
}

/*********************************************
 * PART OF SPEECH
 *********************************************/
*[class~="termentry/partOfSpeech"]:before(10) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.partOfSpeech)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.delete.partOfSpeech')
        )
    );
    .col1();
}
*[class~="termentry/partOfSpeech"]:before(7) {
    content:
    oxy_combobox( 
        edit, '@value',
        editable, false,
        values, 'noun, pronoun, adjective, verb, adverb, preposition, conjunction, interjection, article, other',
        labels, '${i18n(doctales.partOfSpeech.noun)}, ${i18n(doctales.partOfSpeech.pronoun)}, ${i18n(doctales.partOfSpeech.adjective)}, ${i18n(doctales.partOfSpeech.verb)}, ${i18n(doctales.partOfSpeech.adverb)}, ${i18n(doctales.partOfSpeech.preposition)}, ${i18n(doctales.partOfSpeech.conjunction)}, ${i18n(doctales.partOfSpeech.interjection)}, ${i18n(doctales.partOfSpeech.article)}, ${i18n(doctales.partOfSpeech.other)}',
        columns, 15
    );
    .col2();
}
*[class~="termentry/partOfSpeech"] {
    /*visibility: -oxy-collapse-text;*/
    .blockElement();
    width: 100%;
}
*[class~="termentry/partOfSpeech"]:after {
    .separator();
}

/*********************************************
 * NOTE
 *********************************************/
*[class~="topic/note"]:before(10) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.note)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.delete.note')
        )
    );
    .header();
}
*[class~="topic/note"]:hover:before(9) {
    .deleteElementButton();
}
*[class~="topic/note"]:before(8) {
    .col1();
    content: "${i18n(doctales.note)}";
    padding-left: 0.5em;
}
*[class~="topic/note"]:before {
    .hideContent();
}
*[class~="topic/note"] {
    content:
    oxy_textArea(
        edit, '#content',
        contentType, 'text/xml'
    );
    visibility: -oxy-collapse-text;
    .blockElement();
}

/*********************************************
 * DOMAINS
 *********************************************/
*[class~="termentry/domains"]:before(10) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.domains)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.domain'),
            oxy_action(id, 'doctales.delete.domains')
        )
    );
    .header();
}
*[class~="termentry/domains"]:hover:before(9) {
    .deleteElementButton();
}
*[class~="termentry/domains"]:before(8) {
    .separator();
}
*[class~="termentry/domains"] {
    visibility: -oxy-collapse-text;
    .blockElement();
}

/*********************************************
 * DOMAIN
 *********************************************/
*[class~="termentry/domain"]:before(10) {
    content: "${i18n(doctales.domain)}";
    .col1();
}
*[class~="termentry/domain"]:before {
    content:
    oxy_textfield(
        edit, '@value',
        columns, 50
    ) !important;
    float: right;
    display: inline-block;
}
*[class~="termentry/domain"] {
    visibility: -oxy-collapse-text;
    .blockElement();
}
*[class~="termentry/domain"]:after {
    .deleteInlineElementButton();
}

/*********************************************
 * AGREED WITH
 *********************************************/
*[class~="termentry/agreedWith"]:before(10) {
    .header();
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.agreedWith)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.termCommitteeMember'),
            oxy_action(id, 'doctales.delete.agreedWith')
        )
    );
}
*[class~="termentry/agreedWith"]:before(9) {
    .deleteElementButton();
}
*[class~="termentry/agreedWith"] {
    .blockElement();
}

/*********************************************
 * TERM COMMITTEE MEMBER
 *********************************************/
*[class~="termentry/termCommitteeMember"]:before(10) {
    content:
        oxy_buttonGroup(
        label, '${i18n(doctales.termCommitteeMember)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.termCommitteeMember'),
            oxy_action(id, 'doctales.delete.termCommitteeMember')
        )
    );
    .col1();
}
*[class~="termentry/termCommitteeMember"]:before(9) {
    .col2();
}
*[class~="termentry/termCommitteeMember"]:after {
    .deleteInlineElementButton();
}
*[class~="termentry/termCommitteeMember"] {
    list-style: none !important;
    .blockElementNoBorder();
}

/*********************************************
 * TERM NOTATION
 *********************************************/
*[class~="termentry/termNotation"]:before(50) {
    .col1();
}
*[class~="termentry/termNotation"]:before(13) {
    content: "(" attr(language) ") ";
}
*[class~="termentry/termNotation"]:before(12) {
    content: attr(usage);
}
*[class~="termentry/termNotation"]:before(11) {
    .enableEditModeButton();
}
*[class~="termentry/termNotation"]:before(9) {
    .separator();
}
*[class~="termentry/termNotation"]:edit-mode:before(11) {
    .disableEditModeButton();
}
*[class~="termentry/termNotation"]:edit-mode:before(10) {
    .separator();
}
*[class~="termentry/termNotation"]:edit-mode:before(9) {
    content: "${i18n(doctales.usage)}";
    .col1();
}
*[class~="termentry/termNotation"]:edit-mode:before(8) {
    content:
    oxy_combobox( 
        edit, '@usage',
        editable, false,
        values, 'admitted, notRecommended, obsolete, preferred',
        labels, 'admitted, not recommended, obsolete, preferred'
        columns, 20
    );
    .col2();
    padding-left: 1.0em;
}
*[class~="termentry/termNotation"]:edit-mode:before(7) {
    .separator();
}
*[class~="termentry/termNotation"]:edit-mode:before(6) {
    content: "${i18n(doctales.language)}";
    .col1();
}
*[class~="termentry/termNotation"]:edit-mode:before(5) {
    content:
    oxy_combobox( 
        edit, '@language',
        editable, false,
        columns, 20,
    );
    .col2();
    padding-left: 1.0em;
}
*[class~="termentry/termNotation"]:edit-mode:before(4) {
    .separator();
}
*[class~="termentry/termNotation"]:edit-mode:before(3) {
    content: "${i18n(doctales.termdomain)}";
    .col1();
}
*[class~="termentry/termNotation"]:edit-mode:before(2) {
    content:
    oxy_textfield(
        edit, "@termdomain", 
        columns, 50
    );
    .col2();
    padding-left: 1.0em;
}
*[class~="termentry/termNotation"] {
    .blockElement();
}
*[class~="termentry/termNotation"][usage~="preferred"] {
    background-color: @preferredColor;
}
*[class~="termentry/termNotation"][usage~="admitted"] {
    background-color: @admittedColor;
}
*[class~="termentry/termNotation"][usage~="notRecommended"] {
    background-color: @notRecommendedColor;
}
// No background color for dark theme
@media oxygen-high-contrast-black, oxygen-dark-theme {
  *[class~="termentry/termNotation"] {
    background-color: inherit !important;
  }
}

/*********************************************
 * FULL FORM
 *********************************************/
*[class~="termentry/fullForm"]:before(50) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.fullForm)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb'),
            oxy_action(id, 'doctales.rename.toAbbreviation'),
            oxy_action(id, 'doctales.rename.toAcronym'),
            oxy_action(id, 'doctales.rename.toVerb'),
            oxy_action(id, 'doctales.move.element.up'),
            oxy_action(id, 'doctales.move.element.down'),
            oxy_action(id, 'doctales.delete.fullForm')
        )
    );
}

/*********************************************
 * ABBREVIATION
 *********************************************/
*[class~="termentry/abbreviation"]:before(50) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.abbreviation)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb'),
            oxy_action(id, 'doctales.rename.toAcronym'),
            oxy_action(id, 'doctales.rename.toFullForm'),
            oxy_action(id, 'doctales.rename.toVerb'),
            oxy_action(id, 'doctales.move.element.up'),
            oxy_action(id, 'doctales.move.element.down'),
            oxy_action(id, 'doctales.delete.abbreviation')
        )
    );
}

/*********************************************
 * ACRONYM
 *********************************************/
*[class~="termentry/acronym"]:before(50) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.acronym)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb'),
            oxy_action(id, 'doctales.rename.toAbbreviation'),
            oxy_action(id, 'doctales.rename.toFullForm'),
            oxy_action(id, 'doctales.rename.toVerb'),
            oxy_action(id, 'doctales.move.element.up'),
            oxy_action(id, 'doctales.move.element.down'),
            oxy_action(id, 'doctales.delete.acronym')
        )
    );
}

/*********************************************
 * VERB
 *********************************************/
*[class~="termentry/verb"]:before(50) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.verb)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb'),
            oxy_action(id, 'doctales.rename.toAbbreviation'),
            oxy_action(id, 'doctales.rename.toAcronym'),
            oxy_action(id, 'doctales.rename.toFullForm'),
            oxy_action(id, 'doctales.move.element.up'),
            oxy_action(id, 'doctales.move.element.down'),
            oxy_action(id, 'doctales.delete.verb')
        )
    );
}

/*********************************************
 * TERM VARIANT
 *********************************************/
*[class~="termentry/termVariant"]:before(10) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.termVariant)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.termSource'),
            oxy_action(id, 'doctales.add.termContext'),
            oxy_action(id, 'doctales.add.annotation'),
            oxy_action(id, 'doctales.termVariant.delete')
        )
    );
    /*.header();*/
    .col1();
}
*[class~="termentry/termVariant"] {
    -oxy-placeholder-content: "${i18n(doctales.termVariant.placeholder)}";
    .blockElement();
}
*[class~="termentry/termVariant"]:after(1) {
    .enableEditModeButton();
}
*[class~="termentry/termVariant"]:edit-mode:after(1) {
    .disableEditModeButton();
}
*[class~="termentry/termVariant"][case]:edit-mode:after(2) {
    .separator();
}
*[class~="termentry/termVariant"][case]:edit-mode:after(3) {
    content: "${i18n(doctales.case)}";
    .col1();
}
*[class~="termentry/termVariant"][case]:edit-mode:after(4) {
    content:
    oxy_combobox( 
        edit, '@case',
        editable, false,
        columns, 20
    );
    .col2();
}
*[class~="termentry/termVariant"][case]:edit-mode:after(5) {
    .separator();
}
*[class~="termentry/termVariant"][number]:edit-mode:after(6) {
    content: "${i18n(doctales.number)}";
    .col1();
}
*[class~="termentry/termVariant"][number]:edit-mode:after(7) {
    content: 
    oxy_combobox( 
        edit, '@number',
        editable, false,
        columns, 20
    );
}

/*********************************************
 * RELATIONS
 *********************************************/
*[class~="termentry/relations"] {
    -oxy-display-tags: none;
}

/*********************************************
 * ANTONYMS
 *********************************************/
*[class~="termentry/antonyms"]:before(10) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.terminology.antonyms)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.antonym'),
            oxy_action(id, 'doctales.delete.antonyms')
        )
    );
    .header();
}
*[class~="termentry/antonyms"] {
    visibility: -oxy-collapse-text;
    .blockElement();
}

/*********************************************
 * INSTANCES OF
 *********************************************/
*[class~="termentry/instancesOf"]:before(10) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.terminology.instancesOf)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.instanceOf'),
            oxy_action(id, 'doctales.delete.instancesOf')
        )
    );
    .header();
}
*[class~="termentry/instancesOf"] {
    visibility: -oxy-collapse-text;
    .blockElement();
}

/*********************************************
 * PARTS OF
 *********************************************/
*[class~="termentry/partsOf"]:before(10) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.terminology.partsOf)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.partOf'),
            oxy_action(id, 'doctales.delete.partsOf')
        )
    );
    .header();
}
*[class~="termentry/partsOf"] {
    visibility: -oxy-collapse-text;
    .blockElement();
}

/*********************************************
 * HYPERNYMS
 *********************************************/
*[class~="termentry/hypernyms"]:before(10) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.terminology.hypernyms)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.hypernym'),
            oxy_action(id, 'doctales.delete.hypernyms')
        )
    );
    .header();
}
*[class~="termentry/hyponyms"] {
    visibility: -oxy-collapse-text;
    .blockElement();
}

/*********************************************
 * RELATED TERMS
 *********************************************/
*[class~="termentry/relatedTerms"]:before(10) {
    content:
    oxy_buttonGroup(
        label, '${i18n(doctales.terminology.relatedTerms)}',
        transparent, @oxy_buttonGroup_transparent,
        fontInherit, @oxy_buttonGroup_fontInherit,
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.relatedTerm'),
            oxy_action(id, 'doctales.delete.relatedTerms')
        )
    );
    .header();
}
*[class~="termentry/relatedTerms"] {
    visibility: -oxy-collapse-text;
    .blockElement();
}

/*********************************************
 * RELATIONS LINKLIST
 *********************************************/
*[class~="termentry/relations-linklist"]:hover:before(9) {
    .deleteElementButton();
}
*[class~="termentry/relations-linklist"]:before(8) {
    .separator();
}

/*********************************************
 * TERM RELATION
 *********************************************/
*[class~="termentry/termRelation"]:before(10) {
    padding-left: 10em;
    pointer-events: none;
    cursor: default;
    text-decoration-style: none;
    color: @labelColor !important;
}
*[class~="termentry/termRelation"]:before(9) {
    .separator();
}
*[class~="termentry/termRelation"]:before(8) {
    content:
    oxy_label(
        text, oxy_getSomeText(oxy_link-text(), 150, true), 
    ) " "
    oxy_editor(
        type, combo,
        edit, "@keyref",
        columns, 30,
        fontInherit, false
    );
    padding-top: 0.2em;
    margin-left: 0.5em;
    font-family: @font;
}
*[class~="termentry/termRelation"][keyref]:before(7) {
    .openKeyrefButton();
}
*[class~="termentry/termRelation"]:before(6) {
    .deleteInlineElementButton();
}
*[class~="termentry/termRelation"]:before {
    .hideContent();
}
*[class~="termentry/termRelation"] {
    .hideContent();   
    list-style: none;
    padding-top: 0.2em;
    padding-bottom: 0.2em;
    visibility: -oxy-collapse-text;
    -oxy-display-tags: none;
}

/*********************************************
 * ABSTRACT
 *********************************************/
*[class~="topic/abstract"]:before {
    content: "";
}
