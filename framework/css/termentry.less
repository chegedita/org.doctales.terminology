// Colors

@labelColor: black;
@labelFontSize: 0.7em;             
@hintsColor: #105B63;
@placeholderColor: #BD4932;
@focusedPlaceholderColor: #105B63;
@borderColor: #3d3d3d;
@preferredColor: #beffbe;
@admittedColor: #feffbe;
@notRecommendedColor: #ffbfbf;


// Icons

@deleteIcon: '../icons/delete_12.png';
@linkIcon: '../icons/link_12.png';
@pencilIcon: '../icons/pencil_12.png';

// Blocks

*[class~="topic/related-links"]:before {
    display: none;
}

* {
    font-family: Arial;
}

.header {
    font-size: 8pt;
    font-family: "Helvetica Neue",Helvetica,"Segoe UI",Arial,freesans,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
    display: block;
    border-bottom: 1pt solid #767676;
    width: inherit;
    font-style: normal;
    font-weight: normal;
    padding-top: 0.5em;
    padding-bottom: 0;
    padding-left: 0.3em;
    padding-right: 0;
    margin-top: 0.2em;
    margin-bottom: 0.2em;
    margin-left: 0;
    margin-right: 0;
}

.mainBlock {
    border: 1pt solid @borderColor;
    display: block;
    margin-top: 0.5em;
    margin-bottom: 0.5em;
    margin-right: 0.5em;
    margin-left: 0.5em;
    padding-top: 0;
    padding-bottom: 0;
    padding-left: 0.5em;
    padding-right: 0.5em;
    visibility: -oxy-collapse-text;
}

.afterBlock {
    font-size: 0.7em;
    display: block;
    color: #005544;
    border: 1pt solid @borderColor;
    padding: 0.1em;
}

.uiElement {
    display: block;
    margin-top: -1.5em;
    margin-left: 10em;
    padding-top: 0.1em;
}

.uiElementLabel {
    width: 25% !important;
    padding-top: 0.1em;
    font-weight: normal;
}

.indent {
    width: 25%;
    content: ' ';
}

.deleteButton() {
    content: 
    oxy_button(
        action, oxy_action(
            name, 'Delete', 
            description, 'Delete the current element', 
            icon, url(@deleteIcon), 
            operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementOperation', 
            arg-elementLocation, '.'
        ),
        transparent, true
    );
}

.keyrefButton() {
    content: 
    oxy_button(
        action, oxy_action(
            name, 'Keyref', 
            description, 'Keyref a term relation', 
            icon, url(@linkIcon), 
            operation, 'ro.sync.ecss.extensions.dita.keyref.InsertKeyrefOperation'
        ),
        transparent, true
    );
}

.closeButton {
    content:
    oxy_button(
        action, oxy_action(
            name, 'Delete', 
            description, 'Delete the current element', 
            icon, url(@deleteIcon), 
            operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementOperation', 
            arg-elementLocation, '.'
        ),
        transparent, true
    );
    display: block;
    text-align: right;
    float: left;    
    margin-top: -1.7em !important;
    max-width:-moz-max-content;
}

.hideContent {
    content: "" !important;
}

.link {
    pointer-events: none;
    cursor: default;
    text-decoration-style: dotted;
    color: @labelColor !important;
    text-decoration: none !important;
    link: attr(href);
    -ah-link: attr(href);  
}

*[class~="termentry/termentry"] {
    display: block; 
    empty-cells: true; 
    font-family: Serif; 
    font-size: 16px; 
    font-style: normal; 
    font-weight: 400; 
    line-height: 1.2; 
    margin-bottom: 24px; 
    margin-left: auto; 
    margin-right: auto; 
    margin-top: 24px; 
    min-height: 378px; 
    outline-width: 0; 
    padding-bottom: 80px; 
    padding-left: 32px; 
    padding-right: 16px; 
    padding-top: 32px; 
    text-decoration-color: rgba(0,0,0,1.0); 
    text-decoration-line: none; 
    text-decoration-style: solid; 
    width: 816px;
}

*[class~="termentry/termentry"] > *[class~="topic/title"] {
    font-weight: bold;
    font-size: 2em;
}

*[class~="termentry/termentry"] > *[class~="topic/title"]:after {
    .header();
    content: "\A ${i18n(doctales.termAdministration)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.definition'),
            oxy_action(id, 'doctales.add.partOfSpeech'),
            oxy_action(id, 'doctales.add.agreedWith'),
            oxy_action(id, 'doctales.add.equation-figure'),
            oxy_action(id, 'doctales.add.note'),
            oxy_action(id, 'doctales.add.fig'),
            oxy_action(id, 'doctales.add.domains'),
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb'),
            oxy_action(id, 'doctales.add.relations')
        )
    );
}


*[class~="termentry/definition"]:before(10) {
    .header();
    content: "${i18n(doctales.definition)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.definitionSource'),
            oxy_action(id, 'doctales.delete.definition')
        )
    );
}

*[class~="termentry/definition"]:before(9) {
    .closeButton();
}

*[class~="termentry/definition"] {
    .mainBlock();
}

*[class~="termentry/definitionSource"]:before(10) {
    .header();
    content: "\A ${i18n(doctales.definitionSource)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.sourceName'),
            oxy_action(id, 'doctales.add.sourceReference'),
            oxy_action(id, 'doctales.delete.sourceName'),
            oxy_action(id, 'doctales.delete.sourceReference'),
            oxy_action(id, 'doctales.delete.definitionSource')
        )
    );
}

*[class~="termentry/definitionSource"] {
    .mainBlock();
}

*[class~="termentry/termBody"] {
    margin-top: 2em;
}

*[class~="topic/fig"]:before(10) {
    .header();
    content: "\A ${i18n(doctales.fig)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.delete.fig')
        )
    );
}

*[class~="topic/fig"]:before(9) {
    .closeButton();
}

*[class~="topic/fig"] {
    .mainBlock();
}

*[class~="topic/fig"] > *[class~="topic/title"]:before(10) {
    content: "\A ${i18n(doctales.fig.title)}";
    font-weight: normal;
}

*[class~="topic/fig"] > *[class~="topic/title"] {
    font-weight: normal;
    font-style: normal;
}

*[class~="topic/image"] {
}

*[class~="topic/image"]:before(10) {
    .header();
    content: "\A ${i18n(doctales.image)}";
}

*[class~="topic/image"] > *[class~="topic/alt"]:before(10) {
    .header();
    content: "\A ${i18n(doctales.alt)}";
    font-weight: normal;
}

*[class~="topic/image"] > *[class~="topic/alt"] {
}

*[class~="topic/image"] > *[class~="topic/alt"]:before,
*[class~="topic/image"] > *[class~="topic/alt"]:after {
    content: '';
}

*[class~="termentry/termSource"]:before(10) {
    .header();
    content: "\A ${i18n(doctales.termSource)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.sourceName'),
            oxy_action(id, 'doctales.add.sourceReference'),
            oxy_action(id, 'doctales.delete.sourceName'),
            oxy_action(id, 'doctales.delete.sourceReference'),
            oxy_action(id, 'doctales.delete.termSource')
        )
    );
}

*[class~="termentry/termSource"] {
    .mainBlock();
}

*[class~="termentry/sourceName"]:before(10) {
    content: "${i18n(doctales.sourceName)}";
    .header();
}

*[class~="termentry/sourceName"]:before(9) {
    .closeButton();
}

*[class~="termentry/sourceName"]:before(8) {
    content: 
    oxy_textfield(
        edit, '#text',
        columns, 49
    );
}

*[class~="termentry/sourceName"] {
    .mainBlock();
}

*[class~="termentry/sourceReference"]:before(15) {
    content: "${i18n(doctales.sourceReference)}";
    .header();
}

*[class~="termentry/sourceReference"]:before(14) {
    .closeButton();
}

*[class~="termentry/sourceReference"]:before(12) {
    content: "${i18n(doctales.sourceReference.text)}";
    .link();
    width: 5em;
}

*[class~="termentry/sourceReference"]:before(11) {
    content:
    oxy_textfield(
          edit, '#text',
          columns, 40
    )"\A";
}

*[class~="termentry/sourceReference"]:before(8) {
    content: "${i18n(doctales.sourceReference.href)}";
    width: 5em;
    .link();
}

*[class~="termentry/sourceReference"]:before(7) {
    content:
    oxy_textfield(
        edit, '@href',
        columns, 40
    )"\A";
}

*[class~="termentry/sourceReference"]:before(5) {
    content: "${i18n(doctales.sourceReference.format)}";
    width: 5em;
    .link();
}

*[class~="termentry/sourceReference"]:before(4) {
    content:
    oxy_combobox( 
        edit, '@format',
        columns, 13
    )"\A";
}

*[class~="termentry/sourceReference"]:before(3) {
    content: "${i18n(doctales.sourceReference.scope)}";
    width: 5em;
    .link();
}

*[class~="termentry/sourceReference"]:before(2) {
    content:
    oxy_combobox( 
        edit, '@scope',
        columns, 13
    ) !important;
}

*[class~="termentry/sourceReference"]:before {
    display: none !important;
}

*[class~="termentry/sourceReference"][href][format='html']:empty {
    .hideContent();
}

*[class~="termentry/sourceReference"] {
    .mainBlock();
    visibility: -oxy-collapse-text;
}

*[class~="termentry/annotation"]:before(10) {
    .header();
    content: "\A ${i18n(doctales.annotation)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.delete.annotation')
        )
    );
}

*[class~="termentry/annotation"] {
    .mainBlock();
}

*[class~="termentry/termContext"]:before(10) {
    .header();
    content: "\A ${i18n(doctales.termContext)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.delete.termContext')
        )
    );
}

*[class~="termentry/termContext"] {
    .mainBlock();
}

*[class~="termentry/termContextSource"]:before(10) {
    .header();
    content: "\A ${i18n(doctales.termContextSource)}";
}

*[class~="termentry/termContextSource"] {
    .mainBlock();
}

*[class~="termentry/partOfSpeech"]:before(10) {
    .header();
    content: "${i18n(doctales.partOfSpeech)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.delete.partOfSpeech')
        )
    );
}

*[class~="termentry/partOfSpeech"]:before(9) {
    .closeButton();
}

*[class~="termentry/partOfSpeech"]:before(8) {
    content: "${i18n(doctales.partOfSpeech)}";
    .uiElementLabel();
    padding-left: 0.5em;
}

*[class~="termentry/partOfSpeech"]:before(7) {
    content:
    oxy_combobox( 
        edit, '@value',
        editable, false,
        columns, 15
    );
    .uiElement();
    padding-left: 0.5em;
}

*[class~="termentry/partOfSpeech"]:before {
    .hideContent();
}

*[class~="termentry/partOfSpeech"] {
    .mainBlock();
}

*[class~="topic/note"]:before(10) {
    .header();
    content: "${i18n(doctales.note)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.delete.note')
        )
    );
}

*[class~="topic/note"]:before(9) {
    .closeButton();
}

*[class~="topic/note"]:before(8) {
    content: "${i18n(doctales.note)}";
    .uiElementLabel();
    padding-left: 0.5em;
}

*[class~="topic/note"]:before {
    .hideContent();
}

*[class~="topic/note"] {
    content:
    oxy_textArea(
        edit, '#content',
        contentType, 'text/xml'
    );
    .mainBlock();
}

*[class~="termentry/domains"]:before(10) {
    .header();
    content: "${i18n(doctales.domains)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.domain'),
            oxy_action(id, 'doctales.delete.domains')
        )
    );
}

*[class~="termentry/domains"]:before(9) {
    .closeButton();
}

*[class~="termentry/domains"] {
    .mainBlock();
}

*[class~="termentry/domain"]:before(10) {
    content: "${i18n(doctales.domain)}";
    .uiElementLabel();
}

*[class~="termentry/domain"]:before {
    content: oxy_textfield(
        edit, '@value',
        columns, 40
    ) !important;
    float: right;
    display: inline-block;
}

*[class~="termentry/domain"]:after {
    .deleteButton();
}

*[class~="termentry/agreedWith"]:before(10) {
    .header();
    content: "${i18n(doctales.agreedWith)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.termCommitteeMember'),
            oxy_action(id, 'doctales.delete.agreedWith')
        )
    );
}

*[class~="termentry/agreedWith"]:before(9) {
    .closeButton();
}

*[class~="termentry/agreedWith"] {
    .mainBlock();
}

*[class~="termentry/termCommitteeMember"]:before(10) {
    content: "${i18n(doctales.termCommitteeMember)}";
    color: black;
    .uiElementLabel();
}

*[class~="termentry/termCommitteeMember"]:before(9) {
    content: oxy_textfield(
        edit, '#text',
        columns, 50
    );
}

*[class~="termentry/termCommitteeMember"]:before(8) {
    .deleteButton();
}

*[class~="termentry/termCommitteeMember"] {
    list-style: none !important;
    margin: 0 !important;
    padding: 0 !important;
    color: transparent;
}

*[class~="termentry/termNotation"]:before(10) {
    .header();
}

*[class~="termentry/fullForm"]:before(10) {
    content: "${i18n(doctales.fullForm)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb'),
            oxy_action(id, 'doctales.delete.fullForm'),
            oxy_action(id, 'doctales.move.element.up'),
            oxy_action(id, 'doctales.move.element.down')
        )
    );
}

*[class~="termentry/abbreviation"]:before(10) {
    content: "${i18n(doctales.abbreviation)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb'),
            oxy_action(id, 'doctales.delete.abbreviation'),
            oxy_action(id, 'doctales.move.element.up'),
            oxy_action(id, 'doctales.move.element.down')
        )
    );
}

*[class~="termentry/acronym"]:before(10) {
    content: "${i18n(doctales.acronym)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb'),
            oxy_action(id, 'doctales.delete.acronym'),
            oxy_action(id, 'doctales.move.element.up'),
            oxy_action(id, 'doctales.move.element.down')
        )
    );
}

*[class~="termentry/verb"]:before(10) {
    content: "${i18n(doctales.verb)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb'),
            oxy_action(id, 'doctales.delete.verb'),
            oxy_action(id, 'doctales.move.element.up'),
            oxy_action(id, 'doctales.move.element.down')
        )
    );
}

*[class~="termentry/termNotation"]:before(9) {
    .closeButton();
}

*[class~="termentry/termNotation"]:before(8) {
    content: "${i18n(doctales.usage)}";
    .uiElementLabel();
    padding-left: 0.5em;
}

*[class~="termentry/termNotation"]:before(7) {
    content:
    oxy_combobox( 
        edit, '@usage',
        editable, false,
        columns, 15
    );
    .uiElement();
    padding-left: 0.5em;
}

*[class~="termentry/termNotation"]:before(6) {
    content: "${i18n(doctales.language)}";
    .uiElementLabel();
    padding-left: 0.5em;
}

*[class~="termentry/termNotation"]:before(5) {
    content:
    oxy_combobox( 
        edit, '@language',
        editable, false,
        columns, 15,
    );
    .uiElement();
    padding-left: 0.5em;
}

*[class~="termentry/definitionText"]:before(10) {
    content: "${i18n(doctales.definitionText)}";
    .header();
}

*[class~="termentry/definitionText"]:before(1) {
    content:
    oxy_textArea(
        edit, '#content',
        contentType, 'text/xml'
    )"\A";
}

*[class~="termentry/definitionText"] {
    .mainBlock();
}

*[class~="termentry/termNotation"] {
    .mainBlock();
}

*[class~="termentry/termNotation"][usage~="preferred"] {
    background-color: @preferredColor !important;
}

*[class~="termentry/termNotation"][usage~="admitted"] {
    background-color: @admittedColor !important;
}

*[class~="termentry/termNotation"][usage~="notRecommended"] {
    background-color: @notRecommendedColor !important;
}

*[class~="termentry/termVariant"]:before(10) {
    content: "${i18n(doctales.termVariant)}"
        oxy_buttonGroup(
            label, '',
            icon, url(@pencilIcon),
            transparent, 'true',
            actions, 
            oxy_action_list(
                oxy_action(id, 'doctales.add.termVariant'),
                oxy_action(id, 'doctales.add.termSource'),
                oxy_action(id, 'doctales.add.termContext'),
                oxy_action(id, 'doctales.add.annotation'),
                oxy_action(id, 'doctales.delete.termVariant')
            )
        );
    .header();
}

*[class~="termentry/termVariant"]:before(9) {
    .closeButton();
}

*[class~="termentry/termVariant"]:before(8) {
    content: "${i18n(doctales.termVariant)}";
}

*[class~="termentry/termVariant"]:before(7) {
    content: oxy_textfield(
        edit, '#text',
        columns, 50
    );
    .uiElement();
    width: 30em;
}

*[class~="termentry/termVariant"] {
    .mainBlock();
    visibility: -oxy-collapse-text;
}

*[class~="termentry/termVariant"][case]:after(2) {
    content: "${i18n(doctales.case)}";
    width: 10em;
}

*[class~="termentry/termVariant"][case]:after(3) {
    content:
    oxy_combobox( 
        edit, '@case',
        editable, false,
        columns, 15
    );
    float: left;
    clear: left;
    width: 10em;
}

*[class~="termentry/termVariant"][number]:after(5) {
    content: "\A ${i18n(doctales.number)}";
    display: inline-block;
    width: 10em;
}

*[class~="termentry/termVariant"][number]:after(6) {
    content: 
    oxy_combobox( 
        edit, '@number',
        editable, false,
        columns, 15
    );
}

/* relations */
*[class~="termentry/relations"]:before(10) {
    .header();
    content: "${i18n(doctales.relations)}"
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.antonyms'),
            oxy_action(id, 'doctales.add.partsOf'),
            oxy_action(id, 'doctales.add.hypernyms'),
            oxy_action(id, 'doctales.add.hyponyms'),
            oxy_action(id, 'doctales.add.relatedTerms'),
            oxy_action(id, 'doctales.delete.relations')
        )
    );
}

*[class~="termentry/relations"]:before(9) {
    content: "";
}

/* Antonyms */
*[class~="termentry/antonyms"]:before(10) {
    content: "${i18n(doctales.terminology.antonyms)}" 
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.antonym'),
            oxy_action(id, 'doctales.delete.antonyms')
        )
    );
    .header();
}

*[class~="termentry/antonyms"] {
    .mainBlock();
}

/* Are Part of */
*[class~="termentry/partsOf"]:before(10) {
    content: "${i18n(doctales.terminology.partsOf)}" 
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.partOf'),
            oxy_action(id, 'doctales.delete.partsOf')
        )
    );
    .header();
}

*[class~="termentry/partsOf"] {
    .mainBlock();
}

/* Hypernyms */
*[class~="termentry/hypernyms"]:before(10) {
    content: "${i18n(doctales.terminology.hypernyms)}" 
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.hypernym'),
            oxy_action(id, 'doctales.delete.hypernyms')
        )
    );
    .header();
}

*[class~="termentry/hypernyms"] {
    .mainBlock();
}

/* Hyponyms */
*[class~="termentry/hyponyms"]:before(10) {
    content: "${i18n(doctales.terminology.hyponyms)}" 
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.hyponym'),
            oxy_action(id, 'doctales.delete.hyponyms')
        )
    );
    .header();
}

*[class~="termentry/hyponyms"] {
    .mainBlock();
}

/* Related Terms */
*[class~="termentry/relatedTerms"]:before(10) {
    content: "${i18n(doctales.terminology.relatedTerms)}" 
    oxy_buttonGroup(
        label, '',
        icon, url(@pencilIcon),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.relatedTerm'),
            oxy_action(id, 'doctales.delete.relatedTerms')
        )
    );
    .header();
}

*[class~="termentry/relatedTerms"] {
    .mainBlock();
}

*[class~="termentry/relations-linklist"]:before(9) {
    .closeButton();
}

*[class~="termentry/termRelation"]:before(10) {
    padding-left: 10em;
    pointer-events: none;
    cursor: default;
    text-decoration-style: none;
    color: @labelColor !important;
}

*[class~="termentry/termRelation"]:before(9) {
    content:
    oxy_editor(type, combo, edit, "@keyref", columns, 50, fontInherit, false);
    padding-top: 0.2em;
    margin-left: 0.5em;
}

*[class~="termentry/termRelation"]:before(8) {
    content: ' ';
    color: transparent;
    background-image: url(@linkIcon);
    background-repeat: no-repeat;
    background-position: center; 
    width: 1.2em;
    margin-left: 1.5em;
    pointer-events: none;
    cursor: default;
    link: oxy_concat("", attr(keyref, keyref));
}

*[class~="termentry/termRelation"]:before(7) {
    .deleteButton();
}

*[class~="termentry/termRelation"]:before {
    .hideContent();
}

*[class~="termentry/termRelation"] {
    .hideContent();   
    list-style: none;
    padding-top: 0.2em;
    padding-bottom: 0.2em;
    visibility: -oxy-collapse-text;
}

*[class~="topic/abstract"]:before {
    content: "";
}

/* Footer */
*[class~="termentry/termentry"]:after(9) {
    content: '${i18n(doctales.developedByDoctales)} ';
    link: 'https://doctales.github.io';
    color: #767676;
    font-size: 0.7em;
    font-family: "Helvetica Neue",Helvetica,"Segoe UI",Arial,freesans,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
}

*[class~="termentry/termentry"]:after(10) {
    content: ' ';
    width: 5em;
    background-image: url('../icons/doctales.png');
    background-repeat: no-repeat;
    link: 'https://doctales.github.io';
    font-size: 0.7em;
}

*[class~="termentry/termentry"]:after(11) {
    content: ' ';
    width: 1.2em;
    background-image: url('../icons/git.png');
    background-repeat: no-repeat;
    link: 'https://github.com/doctales';
    font-size: 0.7em;
}