// Colors

@labelColor: black;
@labelFontSize: 0.7em;             
@hintsColor: #105B63;
@placeholderColor: #BD4932;
@focusedPlaceholderColor: #105B63;
@borderColor: #3d3d3d;

// Blocks

@font-face {
  font-family: 'fontello';
  src: url('../icons/fontello/font/term.ttf?64916464') format('truetype');
  font-weight: normal;
  font-style: normal;
}

*[class~="topic/related-links"]:before {
    display: none;
}

.beforeBlock {
    color: #767676;
    font-size: 0.7em;
    font-family: "Helvetica Neue",Helvetica,"Segoe UI",Arial,freesans,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
    display: block;
    border-bottom: 1pt solid #767676;
    width: inherit;
    font-style: normal;
    padding-left: 0.3em;
    margin-bottom: 0.2em;
}

.mainBlock {
    border: 1pt solid @borderColor;
    display: block;
    margin-top: 0.5em;
    margin-bottom: 0.5em;
    margin-right: 0.5em;
    padding-left: 0.5em;
    padding-right: 0.5em;
}

.afterBlock {
    font-size: 0.7em;
    display: block;
    color: #005544;
    border: 1pt solid @borderColor;
    padding: 0.1em;
}

.uiElement {
    display: block;
    margin-top: -1.5em;
    margin-left: 10em;
}

.uiElementLabel {
    width: 10em;
    padding-top: 0.1em;
    font-weight: normal;
    color: black !important;
}

.hideContent {
    content: "" !important;
}

.fontello {
    font-family: "fontello" !important;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    font-size: 0.8em !important;
}

*[class~="termentry/definition"]:before(10) {
    .beforeBlock();
    content: "${i18n(doctales.terminology.css.definition)}";
}

*[class~="termentry/definition"] {
    .mainBlock();
}

*[class~="termentry/definitionSource"]:before(10) {
    .beforeBlock();
    content: "\A ${i18n(doctales.terminology.css.definitionSource)}";
}

*[class~="termentry/definitionSource"] {
    .mainBlock();
}

*[class~="termentry/termSource"]:before(10) {
    .beforeBlock();
    content: "\A ${i18n(doctales.terminology.css.termSource)}";
}

*[class~="termentry/termSource"] {
    .mainBlock();
}

*[class~="termentry/sourceReference"]:before {
    content: "${i18n(doctales.terminology.css.sourceReference)}:" !important;
    link: none;
    -ah-link: none;
    pointer-events: none;
    cursor: default;
    text-decoration: none !important;
    text-decoration-style: none;
    color: @labelColor !important;
}

*[class~="termentry/sourceName"]:before(10) {
    content: "${i18n(doctales.terminology.css.sourceName)}: ";
}

*[class~="termentry/partOfSpeech"]:before(10) {
    content: "${i18n(doctales.terminology.css.partOfSpeech)}: ";
}

*[class~="termentry/partOfSpeech"]:before(7) {
    content:
    oxy_combobox( 
        edit, '@value',
        editable, false,
        columns, 15,
        values, 'noun, pronoun, adjective, verb, adverb, preposition, conjunction, interjection, article',
        labels, 'noun, pronoun, adjective, verb, adverb, preposition, conjunction, interjection, article'
    );
    .uiElement();
    padding-left: 0.5em;
}

*[class~="termentry/partOfSpeech"]:before {
    .hideContent();
}

*[class~="termentry/domains"]:before(10) {
    .beforeBlock();
    content: "${i18n(doctales.terminology.css.domains)}:";
}

*[class~="termentry/domains"] {
    .mainBlock();
}

*[class~="termentry/domain"]:before(10) {
    content: "${i18n(doctales.terminology.css.domain)}: ";
    .uiElementLabel();
}

*[class~="termentry/domain"]:before {
    content: oxy_textfield(
        edit, '@value',
        columns, 40
    ) !important;
    float: right;
    display: inline-block;
}

*[class~="termentry/domain"] {
}

*[class~="termentry/agreedWith"]:before(10) {
    .beforeBlock();
    content: "${i18n(doctales.terminology.css.agreedWith)}:";
}

*[class~="termentry/agreedWith"] {
    .mainBlock();
}

*[class~="termentry/termCommitteeMember"]:before(10) {
    content: "${i18n(doctales.terminology.css.termCommitteeMember)}: ";
    .uiElementLabel();
}

*[class~="termentry/termCommitteeMember"] {
}

*[class~="termentry/termNotation"]:before(10) {
    .beforeBlock();
}

*[class~="termentry/fullForm"]:before(10) {
    content: "${i18n(doctales.terminology.css.fullForm)}"
    oxy_buttonGroup(
        label, '',
        icon, url('../icons/pencil-icon.png'),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb'),
            oxy_action(id, 'doctales.delete.fullForm')
        )
    );
}

*[class~="termentry/abbreviation"]:before(10) {
    content: "${i18n(doctales.terminology.css.abbreviation)}"
    oxy_buttonGroup(
        label, '',
        icon, url('../icons/pencil-icon.png'),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb'),
            oxy_action(id, 'doctales.delete.abbreviation')
        )
    );
}

*[class~="termentry/acronym"]:before(10) {
    content: "${i18n(doctales.terminology.css.acronym)}"
    oxy_buttonGroup(
        label, '',
        icon, url('../icons/pencil-icon.png'),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb'),
            oxy_action(id, 'doctales.delete.acronym')
        )
    );
}

*[class~="termentry/verb"]:before(10) {
    content: "${i18n(doctales.terminology.css.verb)}"
    oxy_buttonGroup(
        label, '',
        icon, url('../icons/pencil-icon.png'),
        transparent, 'true',
        actions, 
        oxy_action_list(
            oxy_action(id, 'doctales.add.abbreviation'),
            oxy_action(id, 'doctales.add.acronym'),
            oxy_action(id, 'doctales.add.fullForm'),
            oxy_action(id, 'doctales.add.verb'),
            oxy_action(id, 'doctales.delete.verb')
        )
    );
}

*[class~="termentry/termNotation"]:before(8) {
    content: "${i18n(doctales.terminology.css.usage)}: ";
    .uiElementLabel();
    padding-left: 0.5em;
}

*[class~="termentry/termNotation"]:before(7) {
    content:
    oxy_combobox( 
        edit, '@usage',
        editable, false,
        columns, 15,
        values, 'allowed, deprecated',
        labels, 'allowed, deprecated'
    );
    .uiElement();
    padding-left: 0.5em;
}

/*a*/

*[class~="termentry/termNotation"]:before(5) {
    content: "${i18n(doctales.terminology.css.language)}: ";
    .uiElementLabel();
    padding-left: 0.5em;
}

*[class~="termentry/termNotation"]:before(4) {
    content:
    oxy_combobox( 
        edit, '@language',
        editable, false,
        columns, 15,
        values, 'af, ar-ae, ar-bh, ar-dz, ar-eg, ar-iq, ar-jo, ar-kw, ar-lb, ar-ly, ar-ma, ar-om, ar-qa, ar-sa, ar-sy, ar-tn, ar-ye, be, bg, ca, cs, da, de, de-at, de-ch, de-li, de-lu, el, en, en-au, en-bz, en-ca, en-gb, en-ie, en-jm, en-nz, en-tt, en-us, en-za, es, es-ar, es-bo, es-cl, es-co, es-cr, es-do, es-ec, es-gt, es-hn, es-mx, es-ni, es-pa, es-pe, es-pr, es-py, es-sv, es-uy, es-ve, et, eu, fa, fi, fo, fr, fr-be, fr-ca, fr-ch, fr-lu, ga, gd, he, hi, hr, hu, id, is, it, it-ch, ja, ji, ko, lt, lv, mk, ms, mt, nl, nl-be, no, pl, pt, pt-br, rm, ro, ro-mo, ru, ru-mo, sb, sk, sl, sq, sr, sv, sv-fi, sx, sz, th, tn, tr, ts, uk, ur, ve, vi, xh, zh-cn, zh-hk, zh-sg, zh-tw, zu',
        labels, 'af, ar-ae, ar-bh, ar-dz, ar-eg, ar-iq, ar-jo, ar-kw, ar-lb, ar-ly, ar-ma, ar-om, ar-qa, ar-sa, ar-sy, ar-tn, ar-ye, be, bg, ca, cs, da, de, de-at, de-ch, de-li, de-lu, el, en, en-au, en-bz, en-ca, en-gb, en-ie, en-jm, en-nz, en-tt, en-us, en-za, es, es-ar, es-bo, es-cl, es-co, es-cr, es-do, es-ec, es-gt, es-hn, es-mx, es-ni, es-pa, es-pe, es-pr, es-py, es-sv, es-uy, es-ve, et, eu, fa, fi, fo, fr, fr-be, fr-ca, fr-ch, fr-lu, ga, gd, he, hi, hr, hu, id, is, it, it-ch, ja, ji, ko, lt, lv, mk, ms, mt, nl, nl-be, no, pl, pt, pt-br, rm, ro, ro-mo, ru, ru-mo, sb, sk, sl, sq, sr, sv, sv-fi, sx, sz, th, tn, tr, ts, uk, ur, ve, vi, xh, zh-cn, zh-hk, zh-sg, zh-tw, zu'
    );
    .uiElement();
    padding-left: 0.5em;
}

*[class~="termentry/definitionText"] {
    -oxy-placeholder-content: "Definition";
    -oxy-show-placeholder: always;
}

*[class~="termentry/termNotation"] {
    .mainBlock();
}

*[class~="termentry/termVariant"]:before(10) {
    content: "Term "
        oxy_buttonGroup(
            label, '',
            icon, url('../icons/pencil-icon.png'),
            transparent, 'true',
            actions, 
            oxy_action_list(
                oxy_action(id, 'doctales.add.termVariant'),
                oxy_action(id, 'doctales.delete.termVariant')
            )
        );
    .beforeBlock();
}

*[class~="termentry/termVariant"]:before(9) {
    content: "Term:";
}

*[class~="termentry/termVariant"]:before(8) {
    content: oxy_textfield(
        edit, '#text',
        columns, 50
    );
    .uiElement();
    width: 30em;
}

*[class~="termentry/termVariant"] {
    visibility: -oxy-collapse-text;
}

*[class~="termentry/termVariant"][case]:after(2) {
    content: "${i18n(doctales.terminology.css.case)}: ";
    width: 10em;
}

*[class~="termentry/termVariant"][case]:after(3) {
    content:
    oxy_combobox( 
        edit, '@case',
        editable, false,
        columns, 15,
        values, 'nominative, dative, accusative, genitive',
        labels, 'nominative, dative, accusative, genitive'
    );
    float: left;
    clear: left;
    width: 10em;
}

*[class~="termentry/termVariant"][number]:after(5) {
    content: "\A ${i18n(doctales.terminology.css.number)}: ";
    display: inline-block;
    width: 10em;
}

*[class~="termentry/termVariant"][number]:after(6) {
    content: 
    oxy_combobox( 
        edit, '@number',
        editable, false,
        columns, 15,
        values, 'singular, plural',
        labels, 'singular, plural'
    );
}

/* Related Terms */
*[class~="termentry/relatedTerms"]:before(10) {
    content: "${i18n(doctales.terminology.css.related.terms)}";
    .beforeBlock();
}

*[class~="termentry/relatedTerms"]:before(9) {
    content:
    oxy_button(
        action, oxy_action(
            name, "${i18n(doctales.terminology.css.link.related.terms)}", 
            description, "${i18n(doctales.terminology.css.link.related.terms_description)}", 
            operation, "ro.sync.ecss.extensions.dita.keyref.InsertKeyrefOperation"
        ), 
        showIcon, false
    );
}

*[class~="termentry/relatedTerms"] {
    .mainBlock();
}

*[class~="termentry/relatedTerm"]:before(10) {
    content: "${i18n(doctales.terminology.css.related.term)}";
}

*[class~="termentry/relatedTerm"] {
    .mainBlock();
}

*[class~="termentry/antonym"]:before(10) {
    content: "${i18n(doctales.terminology.css.antonym)}";
    .beforeBlock();
}

*[class~="termentry/antonym"] {
    .mainBlock();
}

*[class~="termentry/hypernym"]:before(10) {
    content: "${i18n(doctales.terminology.css.hypernym)}";
}

*[class~="termentry/hypernym"] {
    .mainBlock();
}

*[class~="termentry/hyponym"]:before(10) {
    content: "${i18n(doctales.terminology.css.hyponym)}";
}

*[class~="termentry/hyponym"] {
    .mainBlock();
}

*[class~="termentry/isPartOf"]:before(10) {
    content: "${i18n(doctales.terminology.css.isPartOf)}";
}

*[class~="termentry/isPartOf"] {
    .mainBlock();
}

*[class~="topic/abstract"]:before {
    content: "";
}

/* Footer */
*[class~="termentry/termentry"]:after(9) {
    content: '${i18n(doctales.terminology.css.developedByDoctales)} ';
    link: 'https://doctales.github.io';
    color: #767676;
    font-size: 0.7em;
    font-family: "Helvetica Neue",Helvetica,"Segoe UI",Arial,freesans,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
}

*[class~="termentry/termentry"]:after(10) {
    content: '\e809';
    link: 'https://doctales.github.io';
    .fontello();
    padding-left: 0.1em;
    padding-right: 0.1em;
}

*[class~="termentry/termentry"]:after(11) {
    content: '\e807';
    link : 'https://github.com/doctales';
    .fontello();
    padding-left: 0.1em;
    padding-right: 0.1em;
}